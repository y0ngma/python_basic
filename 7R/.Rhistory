filter( !is.na(sex) & !is.na(score) ) %>%
group_by(sex) %>%
summarise(mean_score = mean(score) )
# 결측치 제외하고 분석
outlier %>%
#  filter( !is.na(sex) & !is.na(score) ) %>%
filter( !is.na(sex) | !is.na(score) ) %>%
group_by(sex) %>%
summarise(mean_score = mean(score) )
# 결측치 제외하고 분석
outlier %>%
filter( !is.na(sex) & !is.na(score) ) %>%
#  filter( !is.na(sex) | !is.na(score) ) %>%
group_by(sex) %>%
summarise(mean_score = mean(score) )
outlier %>%
filter( !is.na(sex) & !is.na(score) ) %>%
outlier %>%
filter( !is.na(sex) & !is.na(score) )
outlier %>%
filter( !is.na(sex) & !is.na(score) )
outlier
# 결측치 제외하고 분석
outlier %>%
filter( !is.na(sex) & !is.na(score) ) %>%
#  filter( !is.na(sex) | !is.na(score) ) %>%
group_by(sex) %>%
summarise(mean_score = mean(score) )
# 결측치 제외하고 분석
outlier %>%
filter( !is.na(sex) & !is.na(score) )
##################
# 이상치 정제 Outlier
# sex 3 이면 NA할당
outlier <- data.frame( sex=c(1,2,1,3,2,1),
score=c(5,4,3,1,2,6) )
table(outlier$sex)
table(outlier$score)
outlier$sex <- ifelse(outlier$sex ==3, NA, outlier$sex )
outlier
# score가 1~5아니면 NA 할당
outlier$score <- ifelse(outlier$score >5, NA, outlier$score )
outlier
# 결측치 제외하고 분석
outlier %>%
filter( !is.na(sex) & !is.na(score) )
outlier %>%
filter( !is.na(sex) & !is.na(score) ) %>%
#  filter( !is.na(sex) | !is.na(score) ) %>%
group_by(sex) %>%
summarise(mean_score = mean(score) )
outlier %>%
filter( !is.na(sex) & !is.na(score) ) %>%
#  filter( !is.na(sex) | !is.na(score) ) %>%
group_by(sex) %>%
summarise(mean_score = mean(score) )
# 결측치 제외하고 분석
outlier %>%
filter( !is.na(sex) & !is.na(score) )
# 이상치 제거하기 - 극단적인값
# 40~150키로 성인몸무게 벗어나면 극단치
# 통계적 판단 상하위 0.3% 극단치 또는 상자그림 1.5IQR 벗어나면 극단치
## 상자그림으로 극단치 기준 정해서 제거하기
mpg <- as.data.frame(ggplot2::mpg)
boxplot(mpg$hwy)
boxplot(mpg$hwy)$status
boxplot(mpg$hwy)$stats
# 12~37(1~5분면 벗아나면 NA할당
mpg$hwy <- ifelse(mpg$hwy <12 | mpg$hwy >37, NA, mpg$hwy )
table( is.na(mpg$hwy) )
# 결측치 제외하고 분석
mpg %>%
group_by(drv) %>%
summarise( mean_hwy=mean(hwy, na.rm=T) )
## Q1. drv의 이상치 결측처리 여부 확인. %in%기호 활용
mpg$drv
## Q1. drv의 이상치 결측처리 여부 확인. %in%기호 활용
table(mpg$drv)
table( is.na(mpg$drv) )
## Q2. 상자그림 cty이상치 확인. 결측처리후 다시 상자그림으로 확인
boxplot(mpg$cty)
boxplot(mpg$hwy)$stats
## Q2. 상자그림 cty이상치 확인. 결측처리후 다시 상자그림으로 확인
boxplot(mpg$cty)$stats
mpg$cty <- ifelse( mpg$cty<9|mpg$cty>26, NA, mpg$cty )
boxplot(mpg$cty)$stats
boxplot(mpg$cty)
df_nomiss <- df %>% filter( !is.na(score) )
mean(df_nomiss$score)
df_nomiss2 <- df %>% filter( !is.na(score)&is.na(sex) )
# 결측치가 하나라도 있으면 제거하기
df_nomiss2 <- na.omit(df)
df_nomiss2
## Q1. drv의 이상치 결측처리 여부 확인. %in%기호 활용
table(mpg$drv)
# 실습 ##############################
# mpg데이터에서 구동방식 변수의 값은 4륜, 전륜, 후륜 세종류.
# 몇개의 행에 존재할 수 없는값 k할당
# 도시연비cty에도 극단적 값 할당
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10,15,58,93), "drv"] <- "k"
mpg[c(29,43,129,203),"cty"] <- c(3,4,39,42)
## Q1. drv의 이상치 결측처리 여부 확인. %in%기호 활용
table(mpg$drv)
# 실습 ##############################
# mpg데이터에서 구동방식 변수의 값은 4륜, 전륜, 후륜 세종류.
# 몇개의 행에 존재할 수 없는값 k할당
# 도시연비cty에도 극단적 값 할당
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10,15,58,93), "drv"] <- "k"
mpg[c(29,43,129,203),"cty"] <- c(3,4,39,42)
## Q1. drv의 이상치 결측처리 여부 확인. %in%기호 활용
table(mpg$drv)
mpg$drv <- ifelse( mpg$drv %in% c("4","f","r") ,mpg$drv, NA )
# mpg$drv <- ifelse( mpg$drv!=4|mpg$drv!=f|mpg$drv!=r, NA, mpg$drv )
table( is.na(mpg$drv) )
## Q1. drv의 이상치 결측처리 여부 확인. %in%기호 활용
table(mpg$drv)
# mpg$drv <- ifelse( mpg$drv!=4|mpg$drv!=f|mpg$drv!=r, NA, mpg$drv )
table( is.na(mpg$drv) )
## Q2. 상자그림 cty이상치 확인. 결측처리후 다시 상자그림으로 확인
boxplot(mpg$cty)
boxplot(mpg$cty)$stats
mpg$cty <- ifelse( mpg$cty<9|mpg$cty>26, NA, mpg$cty )
table( is.na(mpg$cty) )
boxplot(mpg$cty)
table( is.na(mpg$cty) )
mpg$cty <- ifelse( mpg$cty<9|mpg$cty>26, NA, mpg$cty )
table( is.na(mpg$cty) )
boxplot(mpg$cty)
# 실습 ##############################
# mpg데이터에서 구동방식 변수의 값은 4륜, 전륜, 후륜 세종류.
# 몇개의 행에 존재할 수 없는값 k할당
# 도시연비cty에도 극단적 값 할당
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10,15,58,93), "drv"] <- "k"
mpg[c(29,43,129,203),"cty"] <- c(3,4,39,42)
## Q1. %in%기호 활용, drv의 이상치 결측처리 여부 확인
table(mpg$drv)
mpg$drv <- ifelse( mpg$drv %in% c("4","f","r") ,mpg$drv, NA )
# mpg$drv <- ifelse( mpg$drv!=4|mpg$drv!=f|mpg$drv!=r, NA, mpg$drv )
table( is.na(mpg$drv) )
# mpg$drv <- ifelse( mpg$drv!=4|mpg$drv!=f|mpg$drv!=r, NA, mpg$drv )
table(mpg$drv)
## Q2. 상자그림 cty이상치 확인. 결측처리후 다시 상자그림으로 확인
boxplot(mpg$cty)
boxplot(mpg$cty)$stats
mpg$cty <- ifelse( mpg$cty<9|mpg$cty>26, NA, mpg$cty )
table( is.na(mpg$cty) )
boxplot(mpg$cty)
# 실습 ##############################
# mpg데이터에서 구동방식 변수의 값은 4륜, 전륜, 후륜 세종류.
# 몇개의 행에 존재할 수 없는값 k할당
# 도시연비cty에도 극단적 값 할당
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(10,15,58,93), "drv"] <- "k"
mpg[c(29,43,129,203),"cty"] <- c(3,4,39,42)
## Q1. %in%기호 활용, drv의 이상치 결측처리 여부 확인
table(mpg$drv)
mpg$drv <- ifelse( mpg$drv %in% c("4","f","r") ,mpg$drv, NA )
# mpg$drv <- ifelse( mpg$drv!=4|mpg$drv!=f|mpg$drv!=r, NA, mpg$drv )
table(mpg$drv)
table( is.na(mpg$drv) )
## Q2. 상자그림 cty이상치 확인. 결측처리후 다시 상자그림으로 확인
table( is.na(mpg$cty) )
boxplot(mpg$cty)
boxplot(mpg$cty)$stats
mpg$cty <- ifelse( mpg$cty<9|mpg$cty>26, NA, mpg$cty )
table( is.na(mpg$cty) )
boxplot(mpg$cty)
## Q3. 이상치를 제거했으므로 분석할 단계
## drv별 cty평균을 하나의 dplyr문으로
# df_nomiss2 <- df %>% filter( !is.na(score)&is.na(sex) )
mpg %>%
filter( !is.na(drv) & !is.na(cty) ) %>%
group_by(drv) %>%
summarise( mean_hwy=mean(cty) )
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point()+
xlim(0, 500000)+
ylim(0, 2000)
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point()+
xlim(0, 500000)+
ylim(0, 2000))
df_mpg
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy=mean(hwy))
df_mpg
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy)) +geom_col()
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) +geom_col()
## 3. 크기순으로 정렬
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,mean_hwy), y=mean_hwy) ) +geom_col()
library(ggplot2)
# x축 displ, y축 hwy로 지정해 배경 생성
ggplot(data = mpg, aes(x = displ, y = hwy))
# 배경에 산점도 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# x축 범위 3~6으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3, 6)
# x축 범위 3~6, y축 범위 10~30으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point()+
xlim(0, 500000)+
ylim(0, 2000))
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point() +
xlim(0, 500000) +
ylim(0, 2000)
## 3. 크기순으로 정렬('-'있고없고 차이 비교)
#ggplot( data=df_mpg, aes(x=reorder(drv,mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_col()
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=drv) ) + geom_ㅠㅁㄱ()
ggplot( data=df_mpg, aes(x=drv) ) + geom_bar()
ggplot(data = mpg, aes(x = drv)) + geom_bar()
ggplot( data=df_mpg, aes(x=drv) ) + geom_bar()
ggplot( data= mpg, aes(x=drv) ) + geom_bar()
## -------------------------------------------------------------------- ##
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
ggplot( data = mpg, aes(x=drv) ) + geom_bar()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x=drv) ) + geom_bar()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x = hwy) ) + geom_bar()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x = hwy) ) + geom_bar()
## Q1. 어떤회사suv차종의 도시연비가 높나? 다섯곳막대 연비순정렬
df<- mpg %>%
filter( class == 'suv' ) %>%
group_by(manufacturer) %>%
summarise( mean_cty=mean(cty) ) %>%
arrange( desc(mean_cty) ) %>%
head(5)
## -------------------------------------------------------------------- ##
library(ggplot2)
# x축 displ, y축 hwy로 지정해 배경 생성
ggplot(data = mpg, aes(x = displ, y = hwy))
# 배경에 산점도 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# x축 범위 3~6으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3, 6)
# x축 범위 3~6, y축 범위 10~30으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# x축 범위 y축 범위변경
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point() +
xlim(0, 500000) +
ylim(0, 2000)
## -------------------------------------------------------------------- ##
# 막대그래프 - 집단간 차이
## 평균막대그래프 그리기
## 1. 집단의 평균표 만들기
library(dplyr)
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy=mean(hwy))
df_mpg
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) + geom_col()
## 3. 크기순으로 정렬('-'있고없고 차이 비교)
#ggplot( data=df_mpg, aes(x=reorder(drv,mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x = hwy) ) + geom_bar()
## -------------------------------------------------------------------- ##
## Q1. 어떤회사suv차종의 도시연비가 높나? 다섯곳막대 연비순정렬
df<- mpg %>%
filter( class == 'suv' ) %>%
group_by(manufacturer) %>%
summarise( mean_cty=mean(cty) ) %>%
arrange( desc(mean_cty) ) %>%
head(5)
## -------------------------------------------------------------------- ##
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
## Q1. 어떤회사suv차종의 도시연비가 높나? 다섯곳막대 연비순정렬
df<- mpg %>%
filter( class == 'suv' ) %>%
group_by(manufacturer) %>%
summarise( mean_cty=mean(cty) ) %>%
arrange( desc(mean_cty) ) %>%
head(5)
## Q1. 어떤회사suv차종의 도시연비가 높나? 다섯곳막대 연비순정렬
df<- mpg %>%
filter( class == 'suv' ) %>%
group_by(manufacturer) %>%
summarise( mean_cty=mean(cty) ) %>%
arrange( desc(mean_cty) ) %>%
head()
head(df)
ggplot( data=df, aes(x=mean_cty) ) + geom_bar()
## Q1. 어떤회사suv차종의 도시연비가 높나? 다섯곳막대 연비순정렬
df<- mpg %>%
filter( class == 'suv' ) %>%
group_by(manufacturer) %>%
summarise( mean_cty=mean(cty) ) %>%
arrange( desc(mean_cty) ) %>%
head(5)
ggplot( data=df, aes(x=mean_cty) ) + geom_bar()
ggplot( data=df, aes(x=mean_cty) ) + geom_col()
ggplot( data=df, aes(x=mean_cty) ) + geom_bar()
ggplot( data=df, aes(x=manufacturer) ) + geom_bar()
ggplot( data=df, aes(x=manufacturer, y=mean_cty) ) + geom_bar()
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
ggplt( data=mpg, aes(x=drv, y=hwy) ) + geom_point()
ggplt( data=mpg, aes(x=drv, y=hwy) ) + geom_point()
ggplot( data=mpg, aes(x=drv, y=hwy) ) + geom_point()
## 1.산점도
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# 축 설정 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# 1단계.평균표 만들기
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy))
# 2단계.그래프 생성하기, 크기순 정렬하기
ggplot(data = df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) + geom_col()
## 3.빈도 막대 그래프
ggplot(data = mpg, aes(x = drv)) + geom_bar()
## 4.선 그래프
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
## 5.상자 그림
ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()
df
ggplot( data=df, aes(x=manufacturer, y=mean_cty) ) + geom_bar()
ggplot( data=df, aes(x=manufacturer, y=mean_cty) ) + geom_col()
ggplot( data=df, aes(x=reorder(manufacturer, mean_cty), y=mean_cty) ) + geom_col()
ggplot( data=df, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty) ) + geom_col()
ggplot( data=df, aes(x=manufacturer, y=mean_cty) ) + geom_col()
# x축 displ, y축 hwy로 지정해 배경 생성
ggplot(data = mpg, aes(x = displ, y = hwy))
# 배경에 산점도 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# x축 범위 3~6으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3, 6)
## -------------------------------------------------------------------- ##
library(ggplot2)
# x축 displ, y축 hwy로 지정해 배경 생성
ggplot(data = mpg, aes(x = displ, y = hwy))
# 배경에 산점도 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# x축 범위 3~6으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3, 6)
# x축 범위 3~6, y축 범위 10~30으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# x축 범위 y축 범위변경
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point() +
xlim(0, 500000) +
ylim(0, 2000)
## -------------------------------------------------------------------- ##
# 막대그래프 - 집단간 차이
## 평균막대그래프 그리기
## 1. 집단의 평균표 만들기
library(dplyr)
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy=mean(hwy))
df_mpg
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) + geom_col()
## 3. 크기순으로 정렬('-'있고없고 차이 비교)
#ggplot( data=df_mpg, aes(x=reorder(drv,mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x = hwy) ) + geom_bar()
## -------------------------------------------------------------------- ##
## Q1. 어떤회사suv차종의 도시연비가 높나? 다섯곳막대 연비순정렬
df<- mpg %>%
filter( class == 'suv' ) %>%
group_by(manufacturer) %>%
summarise( mean_cty=mean(cty) ) %>%
arrange( desc(mean_cty) ) %>%
head(5)
ggplot( data=df, aes(x=manufacturer, y=mean_cty) ) + geom_col()
#ggplot( data=df, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty) ) + geom_col()
## -------------------------------------------------------------------- ##
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
## -------------------------------------------------------------------- ##
## 1.산점도
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# 축 설정 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
## 2.평균 막대 그래프
# 1단계.평균표 만들기
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy))
# 2단계.그래프 생성하기, 크기순 정렬하기
ggplot(data = df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) + geom_col()
## 3.빈도 막대 그래프
ggplot(data = mpg, aes(x = drv)) + geom_bar()
## 4.선 그래프
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
## 5.상자 그림
ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()
# 축 설정 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
## 1.산점도
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# 축 설정 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# x축 범위 y축 범위변경
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point() +
xlim(0, 500000) +
ylim(0, 2000)
# x축 범위 3~6, y축 범위 10~30으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# x축 범위 3~6, y축 범위 10~30으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# x축 범위 y축 범위변경
ggplot( data=midwest, aes(x=poptotal, y=popasian) ) +
geom_point() +
xlim(0, 500000) +
ylim(0, 2000)
# x축 displ, y축 hwy로 지정해 배경 생성
ggplot(data = mpg, aes(x = displ, y = hwy))
# 배경에 산점도 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# x축 범위 3~6으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3, 6)
# 배경에 산점도 추가
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
# x축 범위 3~6, y축 범위 10~30으로 지정
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# 막대그래프 - 집단간 차이
## 평균막대그래프 그리기
## 1. 집단의 평균표 만들기
library(dplyr)
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy=mean(hwy))
df_mpg
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) + geom_col()
## 3. 크기순으로 정렬('-'있고없고 차이 비교)
#ggplot( data=df_mpg, aes(x=reorder(drv,mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
## 3. 크기순으로 정렬('-'있고없고 차이 비교)
#ggplot( data=df_mpg, aes(x=reorder(drv,mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
## Q1. 어떤회사suv차종의 도시연비가 높나? 다섯곳막대 연비순정렬
df<- mpg %>%
filter( class == 'suv' ) %>%
group_by(manufacturer) %>%
summarise( mean_cty=mean(cty) ) %>%
arrange( desc(mean_cty) ) %>%
head(5)
ggplot( data=df, aes(x=manufacturer, y=mean_cty) ) + geom_col()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) + geom_col()
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) + geom_bar()
df_mpg
## 2. 그래프생성
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) + geom_col()
ggplot( data=df_mpg, aes(x=drv, y=mean_hwy) ) + geom_bar()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_bar()
## 3. 크기순으로 정렬('-'있고없고 차이 비교)
#ggplot( data=df_mpg, aes(x=reorder(drv,mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_col()
ggplot( data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy) ) +geom_bar()
## geom_bar()갯수새기 그래프 그리기
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x = drv)) + geom_bar()
ggplot( data = mpg, aes(x = hwy) ) + geom_bar()
## geom_bar()갯수새기 그래프 그리기
ggplot( data = mpg, aes(x = drv)) + geom_bar()
